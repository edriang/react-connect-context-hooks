{"version":3,"sources":["todos/components/TodoTextInput.tsx","todos/provider/todosApi.ts","todos/provider/todosActions.ts","todos/provider/todosReducer.ts","todos/provider/TodosProvider.tsx","main/components/Header.tsx","main/provider/mainActions.ts","main/constants.ts","main/provider/mainReducer.ts","main/provider/MainProvider.tsx","main/components/FilterLink.tsx","main/components/Footer.tsx","todos/components/TodoItem.tsx","todos/components/TodoList.tsx","todos/utils/filterVisibleTodos.ts","main/components/MainSection.tsx","main/components/App.tsx","index.tsx"],"names":["TodoTextInput","_ref","onSave","text","placeholder","editing","newTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","currentText","setCurrentText","react_default","a","createElement","className","classnames","edit","new-todo","type","autoFocus","value","onBlur","event","target","onChange","onKeyDown","which","trim","API_URL","fetchTodos","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","this","arguments","toggleComplete","_ref2","_callee2","todo","_context2","completed","updateTodo","_x","_ref3","_callee3","_context3","put","id","_x2","todosApi","addTodo","_ref4","_callee4","_context4","post","_x3","deleteTodo","_ref5","_callee5","_context5","delete","_x4","ACTIONS","UPDATE_ALL_TODOS","Symbol","UPDATE_TODO","ADD_TODO","DELETE_TODO","actions","dispatch","todos","payload","createdAt","Date","now","editTodo","updatedTodo","deletedTodo","completeTodo","_x5","completeAllTodos","_ref6","_ref7","_callee6","todosToUpdate","promises","updatedTodos","_context6","filter","map","objectSpread","Promise","all","_x6","clearCompleted","_ref8","_callee7","todosToRemove","_context7","reducer","state","_ref$payload","current","createContextProvider","todosReducer","todosActions","TodosProvider","TodosContext","withTodos","connectContextFactory","useConnectedContextFactory","components_TodoTextInput","length","actionSelectors","SET_VISIBILITY_FILTER","SWITCH_THEME","setVisibilityFilter","visibilityFilter","switchTheme","VISIBILITY_FILTERS","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","THEME","LIGHT","DARK","initialState","theme","document","body","classList","add","newTheme","replace","mainReducer","mainActions","MainProvider","MainContext","withMain","active","children","selected","style","cursor","onClick","stateSelectors","props","FILTER_TITLES","_FILTER_TITLES","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","key","FilterLink","TodoItem","setEditing","handleSave","checked","onDoubleClick","withMainAndTodos","mergedConnectContextFactory","hiddenItems","components_TodoItem","computedSelectors","totalTodos","console","log","todosCount","readOnly","components_TodoList","components_Footer","setChecked","react_switch_default","onColor","components_Header","components_MainSection","render","provider_MainProvider","provider_TodosProvider","onInit","components_App","getElementById"],"mappings":"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","file":"static/js/main.52f246f5.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\ntype TodoTextInputProps = {\n  onSave: (text: string) => void;\n  text?: string;\n  placeholder?: string;\n  editing?: boolean;\n  newTodo?: boolean;\n}\n\nconst TodoTextInput: React.FC<TodoTextInputProps> = ({ onSave, text, placeholder, editing, newTodo }) => {\n  const [currentText, setCurrentText] = React.useState(text || '');\n\n  const handleSubmit = (event: any) => {\n    if (event.which !== 13) {\n      return;\n    }\n    const text = event.target.value.trim();\n\n    onSave(text);\n\n    if (newTodo) {\n      setCurrentText('');\n    }\n  }\n\n  const handleChange = (event: any) => {\n    setCurrentText(event.target.value);\n  }\n\n  const handleBlur = (event: any) => {\n    if (newTodo) {\n      return;\n    }\n    onSave(event.target.value);\n  }\n\n  return (\n    <input className={\n      classnames({\n        edit: editing,\n        'new-todo': newTodo,\n      })}\n      type=\"text\"\n      placeholder={placeholder}\n      autoFocus={true}\n      value={currentText}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onKeyDown={handleSubmit} />\n  )\n}\n\nexport default TodoTextInput;\nexport {\n  TodoTextInput,\n};\n","import axios from 'axios';\n\nimport { Todo, NewTodo } from \"../../../typings\";\n\nconst API_URL = 'http://5e3243cbb92d240014ea512c.mockapi.io/api/v1/';\n\nconst fetchTodos = async () => {\n    const response = await axios.get(`${API_URL}/todos?page=1&limit=10&sortBy=createdAt&order=desc`);\n\n    return response.data;\n}\n\nconst toggleComplete = async (todo: Todo) => {\n    todo.completed = !todo.completed;\n\n    return updateTodo(todo);\n}\n\nconst updateTodo = async (todo: Todo) => {\n    return await axios.put(`${API_URL}/todos/${todo.id}`, todo);\n}\n\nconst addTodo = async (todo: NewTodo) => {\n    const response = await axios.post(`${API_URL}/todos`, todo);\n    \n    return response.data;\n}\n\nconst deleteTodo = async (todo: Todo) => {\n    const response = await axios.delete(`${API_URL}/todos/${todo.id}`);\n    \n    return response.data;\n}\n\n\nconst todosApi = {\n    fetchTodos,\n    toggleComplete,\n    updateTodo,\n    addTodo,\n    deleteTodo,\n}\n\nexport default todosApi;\n","import todosApi from './todosApi';\n\nimport { Todo, NewTodo } from '../../../typings';\nimport { TodosState } from './todosReducer';\n\nconst ACTIONS = {\n    UPDATE_ALL_TODOS: Symbol(),\n    UPDATE_TODO: Symbol(),\n    ADD_TODO: Symbol(),\n    DELETE_TODO: Symbol(),\n};\n\nconst fetchTodos = (dispatch: any) => async () => {\n    const todos = await todosApi.fetchTodos();\n    \n    dispatch({\n        type: ACTIONS.UPDATE_ALL_TODOS,\n        payload: { todos },\n    });\n}\n\nconst addTodo = (dispatch: any) => async (text: string) => {\n    const todo: NewTodo = {\n        text,\n        completed: false,\n        createdAt: Date.now(),\n    }\n\n    const newTodo = await todosApi.addTodo(todo);\n    \n    dispatch({\n        type: ACTIONS.ADD_TODO,\n        payload: { todo: newTodo },\n    });\n}\n\nconst editTodo = (dispatch: any) => async (todo: Todo, text: string) => {\n    todo.text = text;\n\n    const updatedTodo = await todosApi.updateTodo(todo);\n\n    dispatch({\n        type: ACTIONS.UPDATE_TODO,\n        payload: { todo: updatedTodo },\n    })\n}\n\nconst deleteTodo = (dispatch: any) => async (todo: Todo) => {\n    const deletedTodo = await todosApi.deleteTodo(todo);\n\n    dispatch({\n        type: ACTIONS.DELETE_TODO,\n        payload: { todo: deletedTodo },\n    })\n}\n\nconst completeTodo = (dispatch: any) => async (todo: Todo) => {\n    const updatedTodo = await todosApi.toggleComplete(todo);\n\n    dispatch({\n        type: ACTIONS.UPDATE_TODO,\n        payload: { todo: updatedTodo },\n    })\n}\n\nconst completeAllTodos = (dispatch: any, { todos }: any) => async (completed: boolean) => {\n    const todosToUpdate = todos.filter((todo: Todo) => todo.completed !== completed);\n\n    const promises = todosToUpdate.map((todo: Todo) => (\n        todosApi.updateTodo({ ...todo, completed })\n    ));\n\n    await Promise.all(promises);\n\n    const updatedTodos = todos.map((todo: Todo) => {\n        todo.completed = completed;\n        return todo;\n    });\n\n    dispatch({\n        type: ACTIONS.UPDATE_ALL_TODOS,\n        payload: { todos: updatedTodos }\n    });\n}\n\nconst clearCompleted = (dispatch: any, { todos }: TodosState) => async () => {\n    const todosToRemove = todos.filter((todo) => todo.completed === true);\n\n    const promises = todosToRemove.map((todo) => (\n        todosApi.deleteTodo(todo)\n    ));\n\n    await Promise.all(promises);\n\n    const updatedTodos = todos.filter((todo) => !todo.completed);\n\n    dispatch({\n        type: ACTIONS.UPDATE_ALL_TODOS,\n        payload: { todos: updatedTodos }\n    });\n}\n\nconst actions = {\n    fetchTodos,\n    addTodo,\n    editTodo,\n    deleteTodo,\n    completeTodo,\n    completeAllTodos,\n    clearCompleted,\n};\n\nexport default actions;\nexport {\n    ACTIONS,\n};\n","import { ACTIONS } from './todosActions';\n\nimport { Todo } from '../../../typings';\n\nexport type TodosState = {\n  todos: Todo[];\n}\n\nconst initialState: TodosState = {\n  todos: [],\n};\n\nfunction reducer(state: TodosState, { type, payload = {} }: any): TodosState {\n  const { todos } = state;\n  const { todo } = payload;\n\n  switch (type) {\n    case ACTIONS.UPDATE_ALL_TODOS:\n      return { todos: payload.todos };\n\n    case ACTIONS.UPDATE_TODO:\n        return { todos: todos.map(current => current.id === todo.id ? { ...todo } : current ) };\n\n    case ACTIONS.ADD_TODO:\n      return { todos: [todo].concat(todos) };\n\n    case ACTIONS.DELETE_TODO:\n      return { todos: todos.filter(current => current.id !== todo.id) };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\nexport {\n  initialState,\n};\n","import todosReducer, { initialState } from './todosReducer';\nimport todosActions from './todosActions';\n\nimport createContextProvider, { connectContextFactory, useConnectedContextFactory } from 'react-connect-context-hooks';\n\nconst [TodosProvider, TodosContext] = createContextProvider(todosReducer, initialState, todosActions);\n\nconst withTodos = connectContextFactory(TodosContext);\nconst useTodos = useConnectedContextFactory(TodosContext);\n\nexport default TodosProvider;\nexport {\n    withTodos,\n    useTodos,\n    TodosContext,\n};\n","import React from 'react';\n\nimport TodoTextInput from '../../todos/components/TodoTextInput';\nimport { withTodos } from '../../todos/provider';\n\nimport { addTodo } from '../../../typings';\n\ntype HeaderProps = {\n  addTodo: addTodo;\n}\n\nconst Header: React.FC<HeaderProps> = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text: string) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nexport default withTodos(Header, {\n  actionSelectors: ['addTodo'],\n});\n\nexport {\n  Header,\n};\n","const ACTIONS = {\n    SET_VISIBILITY_FILTER: 'SET_VISIBILITY_FILTER',\n    SWITCH_THEME: 'SWITCH_THEME',\n};\n\nconst setVisibilityFilter = (dispatch: any) => (visibilityFilter: string) => {\n    dispatch({\n        type: ACTIONS.SET_VISIBILITY_FILTER,\n        payload: { visibilityFilter },\n    })\n}\n\nconst switchTheme = (dispatch: any) => () => {\n    dispatch({\n        type: ACTIONS.SWITCH_THEME,\n    })\n}\n\nconst actions = {\n    setVisibilityFilter,\n    switchTheme,\n};\n\nexport default actions;\nexport {\n    ACTIONS,\n};\n","export const VISIBILITY_FILTERS = {\n    SHOW_ALL: 'show_all',\n    SHOW_COMPLETED: 'show_completed',\n    SHOW_ACTIVE: 'show_active',\n};\n\nexport const THEME = {\n    LIGHT: 'light',\n    DARK: 'dark',\n};\n","import { ACTIONS } from './mainActions';\nimport { VISIBILITY_FILTERS, THEME } from '../constants';\n\nexport type MainState = {\n  visibilityFilter: string;\n  theme: string;\n}\n\nconst initialState: MainState = {\n  visibilityFilter: VISIBILITY_FILTERS.SHOW_ALL,\n  theme: THEME.DARK,\n};\n\ndocument.body.classList.add(initialState.theme);\n\nfunction reducer(state: MainState, { type, payload = {} }: any): MainState {\n  const { visibilityFilter } = payload;\n\n  switch (type) {\n    case ACTIONS.SET_VISIBILITY_FILTER:\n      return { ...state, visibilityFilter };\n\n    case ACTIONS.SWITCH_THEME:\n      const newTheme = state.theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT;\n      document.body.classList.replace(state.theme, newTheme);\n\n      return { ...state, theme: newTheme };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\nexport {\n  initialState,\n};\n","import mainReducer, { initialState } from './mainReducer';\nimport mainActions from './mainActions';\n\nimport createContextProvider, { connectContextFactory, useConnectedContextFactory } from 'react-connect-context-hooks';\n\nconst [MainProvider, MainContext] = createContextProvider(mainReducer, initialState, mainActions);\n\nconst withMain = connectContextFactory(MainContext);\nconst useMain = useConnectedContextFactory(MainContext);\n\nexport default MainProvider;\nexport {\n    withMain,\n    useMain,\n    MainContext,\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { withMain } from '../provider';\nimport { MainState } from '../provider/mainReducer';\n\ntype LinkProps = {\n  active: boolean;\n  children: React.ReactNode;\n  setVisibilityFilter: () => void;\n  filter: string;\n}\n\nconst Link: React.FC<LinkProps> = ({ active, children, setVisibilityFilter }) => (\n  <a\n    className={classnames({ selected: active })}\n    style={{ cursor: 'pointer' }}\n    onClick={() => setVisibilityFilter()}\n  >\n    {children}\n  </a>\n)\n\nexport default withMain(Link, {\n  stateSelectors: {\n    active: ({ visibilityFilter }: MainState, props: any) => props.filter === visibilityFilter,\n  },\n  actionSelectors: {\n    setVisibilityFilter: ({ setVisibilityFilter }: any, props: any) => () => setVisibilityFilter(props.filter),\n  },\n});\n\nexport {\n  Link,\n};\n","import React from 'react';\n\nimport FilterLink from './FilterLink';\nimport { VISIBILITY_FILTERS } from '../constants';\n\nconst FILTER_TITLES: {[key: string]: string} = {\n  [VISIBILITY_FILTERS.SHOW_ALL]: 'All',\n  [VISIBILITY_FILTERS.SHOW_ACTIVE]: 'Active',\n  [VISIBILITY_FILTERS.SHOW_COMPLETED]: 'Completed'\n}\n\ntype FooterProps = {\n  completedCount: number;\n  activeCount: number;\n  onClearCompleted: () => void;\n}\n\nconst Footer: React.FC<FooterProps> = ({ activeCount, completedCount, onClearCompleted }) => {\n  const itemWord = activeCount === 1 ? 'item' : 'items';\n  \n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nexport default Footer;\n\nexport {\n  Footer,\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\n\nimport { Todo } from '../../../typings';\n\ntype TodoItemProps = {\n  todo: Todo;\n  editTodo: (todo: Todo, text: string) => void;\n  deleteTodo: (todo: Todo) => void;\n  completeTodo: (todo: Todo) => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo, editTodo, deleteTodo, completeTodo }) => {\n  const [editing, setEditing] = React.useState(false);\n\n  const handleSave = (text: string) => {\n    if (text.length === 0) {\n      deleteTodo(todo);\n    } else {\n      editTodo(todo, text);\n    }\n    setEditing(false);\n  }\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  }\n\n  return (\n    <li className={classnames({\n      completed: todo.completed,\n      editing: editing\n    })}>\n      {editing ? (\n        <TodoTextInput\n          text={todo.text}\n          editing={editing}\n          onSave={(text: string) => handleSave(text)}\n        />\n      ) : (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo)}\n          />\n          <label onDoubleClick={handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo)} />\n        </div>\n      )}\n    </li>\n  )\n}\n\nexport default TodoItem;\nexport {\n  TodoItem,\n};\n","import React from 'react';\nimport { mergedConnectContextFactory } from 'react-connect-context-hooks';\n\nimport TodoItem from './TodoItem';\nimport { TodosContext } from '../provider';\nimport { MainContext } from '../../main/provider';\nimport filterVisibleTodos, { totalTodos, hiddenItemsCount } from '../utils/filterVisibleTodos';\n\nimport { Todo } from '../../../typings';\n\ntype TodoListProps = {\n  todos: Todo[];\n  editTodo: (todo: Todo) => void;\n  deleteTodo: (todo: Todo) => void;\n  completeTodo: (todo: Todo) => void;\n  hiddenItems: number;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, editTodo, deleteTodo, completeTodo, hiddenItems }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo =>\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        editTodo={editTodo}\n        deleteTodo={deleteTodo}\n        completeTodo={completeTodo}\n      />\n    )}\n    {hiddenItems > 0 ? (\n      <div className=\"hidden-items\">{hiddenItems} hidden item/s by filters...</div>\n    ) : ''}\n  </ul>\n);\n\nconst withMainAndTodos = mergedConnectContextFactory([MainContext, TodosContext]);\n\nexport default withMainAndTodos(TodoList, {\n  stateSelectors: ['todos', 'visibilityFilter'],\n  actionSelectors: ['editTodo', 'deleteTodo', 'completeTodo'],\n  computedSelectors: {\n    // This example might not be practical, but done this way to illustrate that computed selectors can override\n    // previous selected props and also these functions can access values returned by previous ones\n    totalTodos: [totalTodos, ['todos']],\n    todos: [filterVisibleTodos, ['todos', 'visibilityFilter']],\n    hiddenItems: [hiddenItemsCount, ['todos', 'totalTodos']],\n  }\n});\n\nexport {\n  TodoList,\n}\n","import { VISIBILITY_FILTERS } from '../../main/constants';\n\nimport { Todo } from '../../../typings';\n\nfunction totalTodos(todos: any){\n    return todos.length;\n}\n\nfunction hiddenItemsCount(todos: any[], totalTodos: number) {\n    return totalTodos - todos.length;\n}\n\nexport default function filterVisibleTodos(todos: Todo[], visibilityFilter: string) {\n    console.log('filterVisibleTodos');\n    if (visibilityFilter === VISIBILITY_FILTERS.SHOW_ACTIVE) {\n        return todos.filter((todo: Todo) => !todo.completed);\n    }\n    if (visibilityFilter === VISIBILITY_FILTERS.SHOW_COMPLETED) {\n        return todos.filter((todo: Todo) => todo.completed);\n    }\n    return todos;\n}\n\nexport {\n    totalTodos,\n    hiddenItemsCount,\n}\n","import React from 'react';\n\nimport Footer from './Footer';\n\nimport { withTodos } from '../../todos/provider';\nimport { TodosState } from '../../todos/provider/todosReducer';\nimport TodoList from '../../todos/components/TodoList';\n\ntype MainSectionProps = {\n  todosCount: number;\n  completedCount: number;\n  completeAllTodos: (completed: boolean) => void;\n  clearCompleted: () => void;\n}\n\nconst MainSection: React.FC<MainSectionProps> = ({ todosCount, completedCount, completeAllTodos, clearCompleted }) => {\n  \n  const onClick = () => {\n    completeAllTodos(completedCount === todosCount ? false : true);\n  }\n\n  return (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={onClick}/>\n        </span>\n      }\n      <TodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={clearCompleted}\n        />\n      }\n    </section>\n  )\n}\n\nexport default withTodos(MainSection, {\n  stateSelectors: {\n    todosCount: ({ todos }: TodosState) => todos.length,\n    completedCount: ({ todos }: TodosState) => todos.filter(todo => todo.completed).length,\n  },\n  actionSelectors: ['completeAllTodos', 'clearCompleted'],\n});\n\nexport {\n  MainSection,\n};\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nimport Header from './Header';\nimport MainSection from './MainSection';\n\nimport { withMain } from '../provider';\n\ntype AppProps = {\n  switchTheme: Function;\n}\n\nconst App: React.FC<AppProps> = ({ switchTheme }) => {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    setChecked(!checked);\n    switchTheme();\n  }\n\n  return (\n    <div>\n      <div className=\"theme-switcher\">\n        <Switch onChange={handleChange} checked={checked} onColor=\"#333\" />\n      </div>\n      <div className=\"todoapp\" >\n        <Header />\n        <MainSection />\n      </div>\n    </div>\n  )\n}\n\nexport default withMain(App, {\n  actionSelectors: ['switchTheme'],\n});\n\nexport {\n  App,\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './main/components/App';\n\nimport MainProvider from './main/provider';\nimport TodosProvider from './todos/provider';\n\nimport 'todomvc-app-css/index.css';\nimport './todoapp.scss';\n\nrender(\n  <MainProvider>\n    <TodosProvider onInit={({ actions }: any) => actions.fetchTodos() }>\n      <App />\n    </TodosProvider>\n  </MainProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}