{"version":3,"sources":["todos/components/TodoTextInput.tsx","todos/store/todosLocalApi.ts","todos/store/todosActions.ts","todos/store/todosReducer.ts","todos/store/TodosProvider.tsx","main/components/Header.tsx","main/store/mainActions.ts","main/constants.ts","main/store/mainReducer.ts","main/store/MainProvider.tsx","main/components/FilterLink.tsx","main/components/Footer.tsx","todos/components/TodoItem.tsx","store.tsx","todos/components/TodoList.tsx","todos/utils/filterVisibleTodos.ts","main/components/MainSection.tsx","main/components/Switch.tsx","main/components/App.tsx","index.tsx"],"names":["TodoTextInput","_ref","onSave","text","placeholder","editing","newTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","currentText","setCurrentText","react_default","a","createElement","className","classnames","edit","new-todo","type","autoFocus","value","onBlur","event","target","onChange","onKeyDown","which","trim","TODOS","id","completed","createdAt","TODOS_IDX","length","toggleComplete","asyncToGenerator","regenerator_default","mark","_callee","todo","updatedTodo","wrap","_context","prev","next","objectSpread","abrupt","updateTodo","stop","_x","apply","this","arguments","_ref2","_callee2","_context2","_x2","todosApi","getTodosList","fetchTodos","addTodo","_ref3","_callee3","_context3","_x3","deleteTodo","_ref4","_callee4","_context4","_x4","ACTIONS","UPDATE_ALL_TODOS","Symbol","UPDATE_TODO","ADD_TODO","DELETE_TODO","actions","dispatch","todos","sent","payload","Date","now","editTodo","deletedTodo","completeTodo","_ref5","_callee5","_context5","_x5","completeAllTodos","getState","_ref6","_callee6","_getState","todosToUpdate","promises","updatedTodos","_context6","filter","map","Promise","all","_x6","clearCompleted","_callee7","_getState2","todosToRemove","_context7","reducer","state","_ref$payload","current","concat","createContextProvider","todosReducer","todosActions","TodosProvider","TodosContext","withTodos","connectContextFactory","useConnectedContextFactory","components_TodoTextInput","actionSelectors","SET_VISIBILITY_FILTER","SWITCH_THEME","setVisibilityFilter","visibilityFilter","switchTheme","VISIBILITY_FILTERS","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","THEME","LIGHT","DARK","DEFAULT_THEME","initialState","theme","document","body","classList","add","newTheme","replace","mainReducer","mainActions","MainProvider","MainContext","withMain","active","children","selected","style","cursor","onClick","stateSelectors","props","FILTER_TITLES","_FILTER_TITLES","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","key","FilterLink","TodoItem","setEditing","handleSave","checked","onDoubleClick","createMergedStore","main","StoreProvider","withStore","hiddenItems","components_TodoItem","computedSelectors","totalTodos","todosCount","readOnly","components_TodoList","components_Footer","Switch","main_components_Switch","components_Header","components_MainSection","render","store","onInit","components_App","getElementById"],"mappings":"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","file":"static/js/main.4f1216c1.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\ntype TodoTextInputProps = {\n  onSave: (text: string) => void;\n  text?: string;\n  placeholder?: string;\n  editing?: boolean;\n  newTodo?: boolean;\n}\n\nconst TodoTextInput: React.FC<TodoTextInputProps> = ({ onSave, text, placeholder, editing, newTodo }) => {\n  const [currentText, setCurrentText] = React.useState(text || '');\n\n  const handleSubmit = (event: any) => {\n    if (event.which !== 13) {\n      return;\n    }\n    const text = event.target.value.trim();\n\n    onSave(text);\n\n    if (newTodo) {\n      setCurrentText('');\n    }\n  }\n\n  const handleChange = (event: any) => {\n    setCurrentText(event.target.value);\n  }\n\n  const handleBlur = (event: any) => {\n    if (newTodo) {\n      return;\n    }\n    onSave(event.target.value);\n  }\n\n  return (\n    <input className={\n      classnames({\n        edit: editing,\n        'new-todo': newTodo,\n      })}\n      type=\"text\"\n      placeholder={placeholder}\n      autoFocus={true}\n      value={currentText}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onKeyDown={handleSubmit} />\n  )\n}\n\nexport default TodoTextInput;\nexport {\n  TodoTextInput,\n};\n","import { Todo, NewTodo } from \"../../../typings\";\n\nconst TODOS = [\n    { id: 1, completed: false, text: 'Create first demo project', createdAt: 1582728561575 },\n    { id: 2, completed: false, text: 'Rate the library on github', createdAt: 1582728561575 },\n    { id: 3, completed: true, text: 'Learn Reducers', createdAt: 1582728561575 },\n    { id: 4, completed: true, text: 'Learn Action Creators', createdAt: 1582728561575 },\n    { id: 5, completed: true, text: 'Learn Context', createdAt: 1582728561575 },\n    { id: 6, completed: true, text: 'Learn React', createdAt: 1582728561575 },\n];\n\nlet TODOS_IDX = TODOS.length;\n\nconst getTodosList = () => TODOS;\n\nconst fetchTodos = () => {\n    return TODOS;\n}\n\nconst toggleComplete = async (todo: Todo) => {\n    const updatedTodo = {\n        ...todo,\n        completed: !todo.completed,\n    };\n\n    return updateTodo(updatedTodo);\n}\n\nconst updateTodo = async (todo: Todo) => {\n    // TODO: call remote service for updating TODO\n\n    return todo;\n}\n\nconst addTodo = async (todo: NewTodo) => {\n    // TODO: call remote service for adding TODO\n\n    const newTodo: Todo = {\n        id: TODOS_IDX += 1,\n        ...todo,\n    }\n\n    return newTodo;\n}\n\nconst deleteTodo = async (todo: Todo) => {\n    // TODO: call remote service for deleting TODO\n\n    return todo;\n}\n\n\nconst todosApi = {\n    getTodosList,\n    fetchTodos,\n    toggleComplete,\n    updateTodo,\n    addTodo,\n    deleteTodo,\n}\n\nexport default todosApi;\n","// NOTE: todosApi could be easily switched to fetch from remote services\n// Take a look at `./todosApi` for concrete example\nimport todosApi from './todosLocalApi';\n\nimport { Todo, NewTodo } from '../../../typings';\n\nconst ACTIONS = {\n    UPDATE_ALL_TODOS: Symbol('UPDATE_ALL_TODOS'),\n    UPDATE_TODO: Symbol('UPDATE_TODO'),\n    ADD_TODO: Symbol('ADD_TODO'),\n    DELETE_TODO: Symbol('DELETE_TODO'),\n};\n\nconst fetchTodos = (dispatch: any) => async () => {\n    const todos = await todosApi.fetchTodos();\n    \n    dispatch({\n        type: ACTIONS.UPDATE_ALL_TODOS,\n        payload: { todos },\n    });\n}\n\nconst addTodo = (dispatch: any) => async (text: string) => {\n    const todo: NewTodo = {\n        text,\n        completed: false,\n        createdAt: Date.now(),\n    }\n\n    const newTodo = await todosApi.addTodo(todo);\n    \n    dispatch({\n        type: ACTIONS.ADD_TODO,\n        payload: { todo: newTodo },\n    });\n}\n\nconst editTodo = (dispatch: any) => async (todo: Todo, text: string) => {\n    todo.text = text;\n\n    const updatedTodo = await todosApi.updateTodo(todo);\n\n    dispatch({\n        type: ACTIONS.UPDATE_TODO,\n        payload: { todo: updatedTodo },\n    })\n}\n\nconst deleteTodo = (dispatch: any) => async (todo: Todo) => {\n    const deletedTodo = await todosApi.deleteTodo(todo);\n\n    dispatch({\n        type: ACTIONS.DELETE_TODO,\n        payload: { todo: deletedTodo },\n    })\n}\n\nconst completeTodo = (dispatch: any) => async (todo: Todo) => {\n    const updatedTodo = await todosApi.toggleComplete(todo);\n\n    dispatch({\n        type: ACTIONS.UPDATE_TODO,\n        payload: { todo: updatedTodo },\n    })\n}\n\nconst completeAllTodos = (dispatch: any, getState: Function) => async (completed: boolean) => {\n    const { todos } = getState();\n    const todosToUpdate = todos.filter((todo: Todo) => todo.completed !== completed);\n\n    const promises = todosToUpdate.map((todo: Todo) => (\n        todosApi.updateTodo({ ...todo, completed })\n    ));\n\n    await Promise.all(promises);\n\n    const updatedTodos = todos.map((todo: Todo) => {\n        todo.completed = completed;\n        return todo;\n    });\n\n    dispatch({\n        type: ACTIONS.UPDATE_ALL_TODOS,\n        payload: { todos: updatedTodos }\n    });\n}\n\nconst clearCompleted = (dispatch: any, getState: Function) => async () => {\n    const { todos } = getState();\n    const todosToRemove = todos.filter((todo: Todo) => todo.completed === true);\n\n    const promises = todosToRemove.map((todo: Todo) => (\n        todosApi.deleteTodo(todo)\n    ));\n\n    await Promise.all(promises);\n\n    const updatedTodos = todos.filter((todo: Todo) => !todo.completed);\n\n    dispatch({\n        type: ACTIONS.UPDATE_ALL_TODOS,\n        payload: { todos: updatedTodos }\n    });\n}\n\nconst actions = {\n    fetchTodos,\n    addTodo,\n    editTodo,\n    deleteTodo,\n    completeTodo,\n    completeAllTodos,\n    clearCompleted,\n};\n\nexport default actions;\nexport {\n    ACTIONS,\n};\n","import { ACTIONS } from './todosActions';\n\nimport { Todo } from '../../../typings';\n\nexport type TodosState = {\n  todos: Todo[];\n}\n\nconst initialState: TodosState = {\n  todos: [],\n};\n\nfunction reducer(state: TodosState, { type, payload = {} }: any): TodosState {\n  const { todos } = state;\n  const { todo } = payload;\n\n  switch (type) {\n    case ACTIONS.UPDATE_ALL_TODOS:\n      return { todos: payload.todos };\n\n    case ACTIONS.UPDATE_TODO:\n        return { todos: todos.map(current => current.id === todo.id ? { ...todo } : current ) };\n\n    case ACTIONS.ADD_TODO:\n      return { todos: [todo].concat(todos) };\n\n    case ACTIONS.DELETE_TODO:\n      return { todos: todos.filter(current => current.id !== todo.id) };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\nexport {\n  initialState,\n};\n","import todosReducer, { initialState } from './todosReducer';\nimport todosActions from './todosActions';\n\nimport createContextProvider, { connectContextFactory, useConnectedContextFactory } from 'react-connect-context-hooks';\n\nconst [TodosProvider, TodosContext] = createContextProvider(todosReducer, initialState, todosActions);\n\nconst withTodos = connectContextFactory(TodosContext);\nconst useTodos = useConnectedContextFactory(TodosContext);\n\nexport default TodosProvider;\nexport {\n    withTodos,\n    useTodos,\n    TodosContext,\n};\n","import React from 'react';\n\nimport TodoTextInput from '../../todos/components/TodoTextInput';\nimport { withTodos } from '../../todos/store';\n\nimport { addTodo } from '../../../typings';\n\ntype HeaderProps = {\n  addTodo: addTodo;\n}\n\nconst Header: React.FC<HeaderProps> = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text: string) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nexport default withTodos(Header, {\n  actionSelectors: ['addTodo'],\n});\n\nexport {\n  Header,\n};\n","const ACTIONS = {\n    SET_VISIBILITY_FILTER: Symbol('SET_VISIBILITY_FILTER'),\n    SWITCH_THEME: Symbol('SWITCH_THEME'),\n};\n\nconst setVisibilityFilter = (dispatch: any) => (visibilityFilter: string) => {\n    dispatch({\n        type: ACTIONS.SET_VISIBILITY_FILTER,\n        payload: { visibilityFilter },\n    })\n}\n\nconst switchTheme = (dispatch: any) => () => {\n    dispatch({\n        type: ACTIONS.SWITCH_THEME,\n    })\n}\n\nconst actions = {\n    setVisibilityFilter,\n    switchTheme,\n};\n\nexport default actions;\nexport {\n    ACTIONS,\n};\n","export const VISIBILITY_FILTERS = {\n    SHOW_ALL: 'show_all',\n    SHOW_COMPLETED: 'show_completed',\n    SHOW_ACTIVE: 'show_active',\n};\n\nexport const THEME = {\n    LIGHT: 'light',\n    DARK: 'dark',\n};\n\nexport const DEFAULT_THEME = THEME.DARK;\n","import { ACTIONS } from './mainActions';\nimport { VISIBILITY_FILTERS, THEME, DEFAULT_THEME } from '../constants';\n\nexport type MainState = {\n  visibilityFilter: string;\n  theme: string;\n}\n\nconst initialState: MainState = {\n  visibilityFilter: VISIBILITY_FILTERS.SHOW_ALL,\n  theme: DEFAULT_THEME,\n};\n\ndocument.body.classList.add(initialState.theme);\n\nfunction reducer(state: MainState, { type, payload = {} }: any): MainState {\n  const { visibilityFilter } = payload;\n\n  switch (type) {\n    case ACTIONS.SET_VISIBILITY_FILTER:\n      return { ...state, visibilityFilter };\n\n    case ACTIONS.SWITCH_THEME:\n      const newTheme = state.theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT;\n      document.body.classList.replace(state.theme, newTheme);\n\n      return { ...state, theme: newTheme };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\nexport {\n  initialState,\n};\n","import mainReducer, { initialState } from './mainReducer';\nimport mainActions from './mainActions';\n\nimport createContextProvider, { connectContextFactory, useConnectedContextFactory } from 'react-connect-context-hooks';\n\nconst [MainProvider, MainContext] = createContextProvider(mainReducer, initialState, mainActions);\n\nconst withMain = connectContextFactory(MainContext);\nconst useMain = useConnectedContextFactory(MainContext);\n\nexport default MainProvider;\nexport {\n    withMain,\n    useMain,\n    MainContext,\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { withMain } from '../store';\nimport { MainState } from '../store/mainReducer';\n\ntype LinkProps = {\n  active: boolean;\n  children: React.ReactNode;\n  setVisibilityFilter: () => void;\n  filter: string;\n}\n\nconst Link: React.FC<LinkProps> = ({ active, children, setVisibilityFilter }) => (\n  <a\n    className={classnames({ selected: active })}\n    style={{ cursor: 'pointer' }}\n    onClick={() => setVisibilityFilter()}\n  >\n    {children}\n  </a>\n)\n\nexport default withMain(Link, {\n  stateSelectors: {\n    active: ({ visibilityFilter }: MainState, props: any) => props.filter === visibilityFilter,\n  },\n  actionSelectors: {\n    setVisibilityFilter: ({ setVisibilityFilter }: any, props: any) => () => setVisibilityFilter(props.filter),\n  },\n});\n\nexport {\n  Link,\n};\n","import React from 'react';\n\nimport FilterLink from './FilterLink';\nimport { VISIBILITY_FILTERS } from '../constants';\n\nconst FILTER_TITLES: {[key: string]: string} = {\n  [VISIBILITY_FILTERS.SHOW_ALL]: 'All',\n  [VISIBILITY_FILTERS.SHOW_ACTIVE]: 'Active',\n  [VISIBILITY_FILTERS.SHOW_COMPLETED]: 'Completed'\n}\n\ntype FooterProps = {\n  completedCount: number;\n  activeCount: number;\n  onClearCompleted: () => void;\n}\n\nconst Footer: React.FC<FooterProps> = ({ activeCount, completedCount, onClearCompleted }) => {\n  const itemWord = activeCount === 1 ? 'item' : 'items';\n  \n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nexport default Footer;\n\nexport {\n  Footer,\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\n\nimport { Todo } from '../../../typings';\n\ntype TodoItemProps = {\n  todo: Todo;\n  editTodo: (todo: Todo, text: string) => void;\n  deleteTodo: (todo: Todo) => void;\n  completeTodo: (todo: Todo) => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo, editTodo, deleteTodo, completeTodo }) => {\n  const [editing, setEditing] = React.useState(false);\n\n  const handleSave = (text: string) => {\n    if (text.length === 0) {\n      deleteTodo(todo);\n    } else {\n      editTodo(todo, text);\n    }\n    setEditing(false);\n  }\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  }\n\n  return (\n    <li className={classnames({\n      completed: todo.completed,\n      editing: editing\n    })}>\n      {editing ? (\n        <TodoTextInput\n          text={todo.text}\n          editing={editing}\n          onSave={(text: string) => handleSave(text)}\n        />\n      ) : (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo)}\n          />\n          <label onDoubleClick={handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo)} />\n        </div>\n      )}\n    </li>\n  )\n}\n\nexport default TodoItem;\nexport {\n  TodoItem,\n};\n","import { createMergedStore } from 'react-connect-context-hooks';\n\nimport MainProvider from './main/store';\nimport TodosProvider from './todos/store';\n\nconst [StoreProvider, withStore, useStore] = createMergedStore({\n    main: MainProvider,\n    todos: TodosProvider,\n});\n\nexport default StoreProvider;\nexport {\n    withStore,\n    useStore,\n};\n","import React from 'react';\n\nimport TodoItem from './TodoItem';\nimport { withStore } from '../../store';\nimport filterVisibleTodos, { totalTodos, hiddenItemsCount } from '../utils/filterVisibleTodos';\n\nimport { Todo } from '../../../typings';\n\ntype TodoListProps = {\n  todos: Todo[];\n  editTodo: (todo: Todo) => void;\n  deleteTodo: (todo: Todo) => void;\n  completeTodo: (todo: Todo) => void;\n  hiddenItems: number;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, editTodo, deleteTodo, completeTodo, hiddenItems }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo =>\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        editTodo={editTodo}\n        deleteTodo={deleteTodo}\n        completeTodo={completeTodo}\n      />\n    )}\n    {hiddenItems > 0 ? (\n      <div className=\"hidden-items\">{hiddenItems} hidden item/s by filters...</div>\n    ) : ''}\n  </ul>\n);\n\nexport default withStore(TodoList, {\n  stateSelectors: ['todos.todos', 'main.visibilityFilter'],\n  actionSelectors: ['todos.editTodo', 'todos.deleteTodo', 'todos.completeTodo'],\n  computedSelectors: {\n    // This example might not be practical, but done this way to illustrate that computed selectors can override\n    // previous selected props and also these functions can access values returned by previous ones\n    totalTodos: [totalTodos, ['todos']],\n    todos: [filterVisibleTodos, ['todos', 'visibilityFilter']],\n    hiddenItems: [hiddenItemsCount, ['todos', 'totalTodos']],\n  }\n});\n\nexport {\n  TodoList,\n}\n","import { VISIBILITY_FILTERS } from '../../main/constants';\n\nimport { Todo } from '../../../typings';\n\nfunction totalTodos(todos: any){\n    return todos.length;\n}\n\nfunction hiddenItemsCount(todos: any[], totalTodos: number) {\n    return totalTodos - todos.length;\n}\n\nexport default function filterVisibleTodos(todos: Todo[], visibilityFilter: string) {\n    if (visibilityFilter === VISIBILITY_FILTERS.SHOW_ACTIVE) {\n        return todos.filter((todo: Todo) => !todo.completed);\n    }\n    if (visibilityFilter === VISIBILITY_FILTERS.SHOW_COMPLETED) {\n        return todos.filter((todo: Todo) => todo.completed);\n    }\n    return todos;\n}\n\nexport {\n    totalTodos,\n    hiddenItemsCount,\n}\n","import React from 'react';\n\nimport Footer from './Footer';\n\nimport { withTodos } from '../../todos/store';\nimport { TodosState } from '../../todos/store/todosReducer';\nimport TodoList from '../../todos/components/TodoList';\n\ntype MainSectionProps = {\n  todosCount: number;\n  completedCount: number;\n  completeAllTodos: (completed: boolean) => void;\n  clearCompleted: () => void;\n}\n\nconst MainSection: React.FC<MainSectionProps> = ({ todosCount, completedCount, completeAllTodos, clearCompleted }) => {\n  \n  const onClick = () => {\n    completeAllTodos(completedCount === todosCount ? false : true);\n  }\n\n  return (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={onClick}/>\n        </span>\n      }\n      <TodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={clearCompleted}\n        />\n      }\n    </section>\n  )\n}\n\nexport default withTodos(MainSection, {\n  stateSelectors: {\n    todosCount: ({ todos }: TodosState) => todos.length,\n    completedCount: ({ todos }: TodosState) => todos.filter(todo => todo.completed).length,\n  },\n  actionSelectors: ['completeAllTodos', 'clearCompleted'],\n});\n\nexport {\n  MainSection,\n};\n","import React from 'react';\n\nimport './Switch.css';\n\ntype SwitchProps = {\n    checked: boolean;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Switch: React.FC<SwitchProps> = ({ checked, onChange }) => (\n    <label className=\"switch\">\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\n        <span className=\"slider round\"></span>\n    </label>\n);\n\nexport default Switch;\n","import React from 'react';\n\nimport Header from './Header';\nimport MainSection from './MainSection';\nimport Switch from './Switch';\n\nimport { withMain } from '../store';\n\nimport { THEME } from '../constants';\n\n\ntype AppProps = {\n  theme: string;\n  switchTheme: Function;\n}\n\nconst App: React.FC<AppProps> = ({ theme, switchTheme }) => {\n  const checked = theme === THEME.LIGHT;\n\n  const handleChange = () => {\n    switchTheme();\n  }\n\n  return (\n    <div>\n      <div className=\"theme-switcher\">\n        <Switch onChange={handleChange} checked={checked} />\n      </div>\n      <div className=\"todoapp\" >\n        <Header />\n        <MainSection />\n      </div>\n    </div>\n  )\n}\n\nexport default withMain(App, {\n  stateSelectors: ['theme'],\n  actionSelectors: ['switchTheme'],\n});\n\nexport {\n  App,\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './main/components/App';\n\nimport StoreProvider from './store';\n\nimport 'todomvc-app-css/index.css';\nimport './todoapp.scss';\n\n\nconst onInit = ({ fetchTodos }: any) => {\n  fetchTodos();\n}\n\nconst selection = {\n  actionSelectors: ['todos.fetchTodos'],\n}\n\nrender(\n  <StoreProvider onInit={[selection, onInit]}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}