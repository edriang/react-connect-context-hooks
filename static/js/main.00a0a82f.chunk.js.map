{"version":3,"sources":["todos/components/TodoTextInput.tsx","todos/provider/todosActions.ts","todos/provider/todosReducer.ts","todos/provider/TodosProvider.tsx","main/components/Header.tsx","main/provider/mainActions.ts","main/constants.ts","main/provider/mainReducer.ts","main/provider/MainProvider.tsx","main/components/FilterLink.tsx","main/components/Footer.tsx","todos/components/TodoItem.tsx","todos/components/TodoList.tsx","main/components/MainSection.tsx","main/components/App.tsx","index.tsx"],"names":["TodoTextInput","_ref","onSave","text","placeholder","editing","newTodo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","currentText","setCurrentText","react_default","a","createElement","className","classnames","edit","new-todo","type","autoFocus","value","onBlur","event","target","onChange","onKeyDown","which","trim","ACTIONS","ADD_TODO","EDIT_TODO","DELETE_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","TODO_MAX_ID","actions","addTodo","dispatch","todo","id","completed","payload","editTodo","deleteTodo","completeTodo","completeAllTodos","clearCompleted","reducer","state","_ref$payload","todos","concat","map","current","objectSpread","filter","allMarked","every","createContextProvider","todosReducer","todosActions","TodosProvider","TodosContext","withTodos","connectContextFactory","useConnectedContextFactory","components_TodoTextInput","length","actionMappers","SET_VISIBILITY_FILTER","setVisibilityFilter","visibilityFilter","VISIBILITY_FILTERS","initialState","mainReducer","mainActions","MainProvider","MainContext","withMain","active","children","selected","style","cursor","onClick","stateMappers","_ref2","props","_ref3","FILTER_TITLES","_FILTER_TITLES","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","key","FilterLink","TodoItem","setEditing","handleSave","checked","onDoubleClick","withMainAndTodos","mergedConnectContextFactory","components_TodoItem","afterMerge","mergedProps","todosCount","readOnly","components_TodoList","components_Footer","App","components_Header","components_MainSection","render","provider_MainProvider","provider_TodosProvider","components_App","document","getElementById"],"mappings":"uLAsDeA,EA3CqC,SAAAC,GAAqD,IAAlDC,EAAkDD,EAAlDC,OAAQC,EAA0CF,EAA1CE,KAAMC,EAAoCH,EAApCG,YAAaC,EAAuBJ,EAAvBI,QAASC,EAAcL,EAAdK,QAAcC,EACjEC,IAAMC,SAASN,GAAQ,IAD0CO,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAChGM,EADgGH,EAAA,GACnFI,EADmFJ,EAAA,GA2BvG,OACEK,EAAAC,EAAAC,cAAA,SAAOC,UACLC,IAAW,CACTC,KAAMf,EACNgB,WAAYf,IAEdgB,KAAK,OACLlB,YAAaA,EACbmB,WAAW,EACXC,MAAOX,EACPY,OAjBe,SAACC,GACdpB,GAGJJ,EAAOwB,EAAMC,OAAOH,QAclBI,SAtBiB,SAACF,GACpBZ,EAAeY,EAAMC,OAAOH,QAsB1BK,UApCiB,SAACH,GACpB,GAAoB,KAAhBA,EAAMI,MAAV,CAGA,IAAM3B,EAAOuB,EAAMC,OAAOH,MAAMO,OAEhC7B,EAAOC,GAEHG,GACFQ,EAAe,gBCrBfkB,EAAU,CACZC,SAAU,WACVC,UAAW,YACXC,YAAa,cACbC,cAAe,gBACfC,mBAAoB,qBACpBC,gBAAiB,mBAGjBC,EAAc,EA2DHC,EATC,CACZC,QAjDY,SAACC,GAAD,OAAmB,SAACvC,GAGhC,IAAMwC,EAAa,CACfxC,OACAyC,KAJFL,EAKEM,WAAW,GAGfH,EAAS,CACLpB,KAAMU,EAAQC,SACda,QAAS,CAAEH,YAuCfI,SAnCa,SAACL,GAAD,OAAmB,SAACC,EAAYxC,GAC7CuC,EAAS,CACLpB,KAAMU,EAAQE,UACdY,QAAS,CAAEH,OAAMxC,YAiCrB6C,WA7Be,SAACN,GAAD,OAAmB,SAACC,GACnCD,EAAS,CACLpB,KAAMU,EAAQG,YACdW,QAAS,CAAEH,YA2BfM,aAvBiB,SAACP,GAAD,OAAmB,SAACC,GACrCD,EAAS,CACLpB,KAAMU,EAAQI,cACdU,QAAS,CAAEH,YAqBfO,iBAjBqB,SAACR,GAAD,OAAmB,WACxCA,EAAS,CACLpB,KAAMU,EAAQK,uBAgBlBc,eAZmB,SAACT,GAAD,OAAmB,WACtCA,EAAS,CACLpB,KAAMU,EAAQM,qBCVPc,MAnCf,SAAiBC,EAAjBpD,GAA6E,IAAvCqB,EAAuCrB,EAAvCqB,KAAuCgC,EAAArD,EAAjC6C,eAAiC,IAAAQ,EAAvB,GAAuBA,EACnEC,EAAUF,EAAVE,MACAZ,EAAeG,EAAfH,KAAMxC,EAAS2C,EAAT3C,KAEd,OAAQmB,GACN,KAAKU,EAAQC,SACX,MAAO,CAAEsB,MAAOA,EAAMC,OAAO,CAACb,KAEhC,KAAKX,EAAQE,UACX,MAAO,CAAEqB,MAAOA,EAAME,IAAI,SAAAC,GAAO,OAAIA,EAAQd,KAAOD,EAAKC,GAApBjC,OAAAgD,EAAA,EAAAhD,CAAA,GAA8BgC,EAA9B,CAAoCxC,SAASuD,KAEpF,KAAK1B,EAAQG,YACX,MAAO,CAAEoB,MAAOA,EAAMK,OAAO,SAAAF,GAAO,OAAIA,EAAQd,KAAOD,EAAKC,MAE9D,KAAKZ,EAAQI,cACX,MAAO,CAAEmB,MAAOA,EAAME,IAAI,SAAAC,GAAO,OAAIA,EAAQd,KAAOD,EAAKC,GAApBjC,OAAAgD,EAAA,EAAAhD,CAAA,GAA8BgC,EAA9B,CAAoCE,WAAYF,EAAKE,YAAca,KAE1G,KAAK1B,EAAQK,mBACX,IAAMwB,EAAYN,EAAMO,MAAM,SAAAnB,GAAI,OAAIA,EAAKE,YAE3C,MAAO,CACHU,MAAOA,EAAME,IAAI,SAAAd,GAAI,OAAAhC,OAAAgD,EAAA,EAAAhD,CAAA,GACdgC,EADc,CAEjBE,WAAYgB,OAItB,KAAK7B,EAAQM,gBACX,MAAO,CAAEiB,MAAOA,EAAMK,OAAO,SAAAjB,GAAI,OAAKA,EAAKE,aAE7C,QACE,OAAOQ,aCtCyBU,YAAsBC,EDG3B,CAC/BT,MAAO,ICJ+EU,sBAAjFC,OAAeC,OAEhBC,EAAYC,YAAsBF,GAGzBD,GAFEI,YAA2BH,GAE7BD,GCgBAE,IAfuB,SAAAnE,GAAA,IAAGwC,EAAHxC,EAAGwC,QAAH,OACpC1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACsD,EAAD,CACEjE,SAAO,EACPJ,OAAQ,SAACC,GACa,IAAhBA,EAAKqE,QACP/B,EAAQtC,IAGZC,YAAY,6BAKe,CAC/BqE,cAAe,CAAC,oBC3BZzC,EAAU,CACZ0C,sBAAuB,yBAcZlC,EAJC,CACZmC,oBARwB,SAACjC,GAAD,OAAmB,SAACkC,GAC5ClC,EAAS,CACLpB,KAAMU,EAAQ0C,sBACd5B,QAAS,CAAE8B,yBCPNC,EACC,WADDA,EAEO,iBAFPA,EAGI,cCIXC,EAA0B,CAC9BF,iBAAkBC,GAeLzB,QAZf,SAAiBC,EAAjBpD,GAA2E,IAAtCqB,EAAsCrB,EAAtCqB,KAAsCgC,EAAArD,EAAhC6C,QACjC8B,QADiE,IAAAtB,EAAtB,GAAsBA,GACjEsB,iBAER,OAAQtD,GACN,KAAKU,EAAQ0C,sBACX,OAAO/D,OAAAgD,EAAA,EAAAhD,CAAA,GAAK0C,EAAZ,CAAmBuB,qBAErB,QACE,OAAOvB,MCduBU,YAAsBgB,EAAaD,EAAcE,sBAA9EC,OAAcC,OAEfC,EAAWd,YAAsBa,GAGxBD,GAFCX,YAA2BY,GAE5BD,GCaAE,IAVmB,SAAAlF,GAAA,IAAGmF,EAAHnF,EAAGmF,OAAQC,EAAXpF,EAAWoF,SAAUV,EAArB1E,EAAqB0E,oBAArB,OAChC5D,EAAAC,EAAAC,cAAA,KACEC,UAAWC,IAAW,CAAEmE,SAAUF,IAClCG,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAMd,MAEdU,IAIyB,CAC5BK,aAAc,CACZN,OAAQ,SAAAO,EAAkCC,GAAlC,IAAGhB,EAAHe,EAAGf,iBAAH,OAAiDgB,EAAMhC,SAAWgB,IAE5EH,cAAe,CACbE,oBAAqB,SAAAkB,EAA+BD,GAA/B,IAAGjB,EAAHkB,EAAGlB,oBAAH,OAA8C,kBAAMA,EAAoBiB,EAAMhC,aCvBjGkC,GAAsCC,EAAA,GAAApF,OAAAqF,EAAA,EAAArF,CAAAoF,EACzClB,EAA8B,OADWlE,OAAAqF,EAAA,EAAArF,CAAAoF,EAEzClB,EAAiC,UAFQlE,OAAAqF,EAAA,EAAArF,CAAAoF,EAGzClB,EAAoC,aAHKkB,GAyC7BE,EA7BuB,SAAAhG,GAAuD,IAApDiG,EAAoDjG,EAApDiG,YAAaC,EAAuClG,EAAvCkG,eAAgBC,EAAuBnG,EAAvBmG,iBAC9DC,EAA2B,IAAhBH,EAAoB,OAAS,QAE9C,OACEnF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdH,EAAAC,EAAAC,cAAA,cAASiF,GAAe,MAD1B,IAC0CG,EAD1C,SAGAtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACXP,OAAO2F,KAAKR,GAAerC,IAAI,SAAAG,GAAM,OACpC7C,EAAAC,EAAAC,cAAA,MAAIsF,IAAK3C,GACP7C,EAAAC,EAAAC,cAACuF,EAAD,CAAY5C,OAAQA,GACjBkC,EAAclC,UAMnBuC,GACFpF,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVuE,QAASW,GAFX,qBCsBOK,EA7C2B,SAAAxG,GAAkD,IAA/C0C,EAA+C1C,EAA/C0C,KAAMI,EAAyC9C,EAAzC8C,SAAUC,EAA+B/C,EAA/B+C,WAAYC,EAAmBhD,EAAnBgD,aAAmB1C,EAC5DC,IAAMC,UAAS,GAD6CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACnFF,EADmFK,EAAA,GAC1EgG,EAD0EhG,EAAA,GAgB1F,OACEK,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAW,CACxB0B,UAAWF,EAAKE,UAChBxC,QAASA,KAERA,EACCU,EAAAC,EAAAC,cAACsD,EAAD,CACEpE,KAAMwC,EAAKxC,KACXE,QAASA,EACTH,OAAQ,SAACC,GAAD,OAtBG,SAACA,GACE,IAAhBA,EAAKqE,OACPxB,EAAWL,GAEXI,EAASJ,EAAMxC,GAEjBuG,GAAW,GAgBqBC,CAAWxG,MAGvCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,SACVI,KAAK,WACLsF,QAASjE,EAAKE,UACdjB,SAAU,kBAAMqB,EAAaN,MAE/B5B,EAAAC,EAAAC,cAAA,SAAO4F,cAvBW,WACxBH,GAAW,KAuBF/D,EAAKxC,MAERY,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUuE,QAAS,kBAAMzC,EAAWL,SClBjDmE,EAFUC,YAA4B,CAAC7B,EAAaf,GAEpD2C,CAhB2B,SAAA7G,GAAA,IAAGsD,EAAHtD,EAAGsD,MAAOR,EAAV9C,EAAU8C,SAAUC,EAApB/C,EAAoB+C,WAAYC,EAAhChD,EAAgCgD,aAAhC,OACxClC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXqC,EAAME,IAAI,SAAAd,GAAI,OACb5B,EAAAC,EAAAC,cAAC+F,EAAD,CACET,IAAK5D,EAAKC,GACVD,KAAMA,EACNI,SAAUA,EACVC,WAAYA,EACZC,aAAcA,QAQoB,CACxCyC,aAAc,CAAC,QAAS,oBACxBjB,cAAe,CAAC,WAAY,aAAc,gBAC1CwC,WAHwC,SAG7BC,GAAkB,IACnB3D,EAA4B2D,EAA5B3D,MAAOqB,EAAqBsC,EAArBtC,iBAEf,OAAIA,IAAqBC,EAChB,CAAEtB,SAEPqB,IAAqBC,EAChB,CAAEtB,MAAOA,EAAMK,OAAO,SAACjB,GAAD,OAAiBA,EAAKE,aAE9C,CAAEU,MAAOA,EAAMK,OAAO,SAACjB,GAAD,OAAgBA,EAAKE,gBCJvCuB,IA1BiC,SAAAnE,GAAA,IAAGkH,EAAHlH,EAAGkH,WAAYhB,EAAflG,EAAekG,eAAgBjD,EAA/BjD,EAA+BiD,iBAAkBC,EAAjDlD,EAAiDkD,eAAjD,OAC9CpC,EAAAC,EAAAC,cAAA,WAASC,UAAU,UAEbiG,GACFpG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVI,KAAK,WACLsF,QAAST,IAAmBgB,EAC5BC,UAAQ,IAEVrG,EAAAC,EAAAC,cAAA,SAAOwE,QAASvC,KAGpBnC,EAAAC,EAAAC,cAACoG,EAAD,QAEIF,GACFpG,EAAAC,EAAAC,cAACqG,EAAD,CACEnB,eAAgBA,EAChBD,YAAaiB,EAAahB,EAC1BC,iBAAkBjD,MAMY,CACpCuC,aAAc,CACZyB,WAAY,SAAAxB,GAAA,OAAAA,EAAGpC,MAA8BiB,QAC7C2B,eAAgB,SAAAN,GAAA,OAAAA,EAAGtC,MAA8BK,OAAO,SAAAjB,GAAI,OAAIA,EAAKE,YAAW2B,SAElFC,cAAe,CAAC,mBAAoB,oBClCvB8C,EAPH,kBACVxG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAD,cCEJC,iBACE3G,EAAAC,EAAAC,cAAC0G,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAD,QAGJC,SAASC,eAAe","file":"static/js/main.00a0a82f.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\ntype TodoTextInputProps = {\n  onSave: (text: string) => void;\n  text?: string;\n  placeholder?: string;\n  editing?: boolean;\n  newTodo?: boolean;\n}\n\nconst TodoTextInput: React.FC<TodoTextInputProps> = ({ onSave, text, placeholder, editing, newTodo }) => {\n  const [currentText, setCurrentText] = React.useState(text || '');\n\n  const handleSubmit = (event: any) => {\n    if (event.which !== 13) {\n      return;\n    }\n    const text = event.target.value.trim();\n\n    onSave(text);\n\n    if (newTodo) {\n      setCurrentText('');\n    }\n  }\n\n  const handleChange = (event: any) => {\n    setCurrentText(event.target.value);\n  }\n\n  const handleBlur = (event: any) => {\n    if (newTodo) {\n      return;\n    }\n    onSave(event.target.value);\n  }\n\n  return (\n    <input className={\n      classnames({\n        edit: editing,\n        'new-todo': newTodo,\n      })}\n      type=\"text\"\n      placeholder={placeholder}\n      autoFocus={true}\n      value={currentText}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onKeyDown={handleSubmit} />\n  )\n}\n\nexport default TodoTextInput;\nexport {\n  TodoTextInput,\n};\n","import { Todo } from '../../../typings';\n\nconst ACTIONS = {\n    ADD_TODO: 'ADD_TODO',\n    EDIT_TODO: 'EDIT_TODO',\n    DELETE_TODO: 'DELETE_TODO',\n    COMPLETE_TODO: 'COMPLETE_TODO',\n    COMPLETE_ALL_TODOS: 'COMPLETE_ALL_TODOS',\n    CLEAR_COMPLETED: 'CLEAR_COMPLETED',\n};\n\nlet TODO_MAX_ID = 0;\n\nconst addTodo = (dispatch: any) => (text: string) => {\n    ++TODO_MAX_ID;\n\n    const todo: Todo = {\n        text,\n        id: TODO_MAX_ID,\n        completed: false,\n    }\n    \n    dispatch({\n        type: ACTIONS.ADD_TODO,\n        payload: { todo },\n    });\n}\n\nconst editTodo = (dispatch: any) => (todo: Todo, text: string) => {\n    dispatch({\n        type: ACTIONS.EDIT_TODO,\n        payload: { todo, text },\n    })\n}\n\nconst deleteTodo = (dispatch: any) => (todo: Todo) => {\n    dispatch({\n        type: ACTIONS.DELETE_TODO,\n        payload: { todo },\n    })\n}\n\nconst completeTodo = (dispatch: any) => (todo: Todo) => {\n    dispatch({\n        type: ACTIONS.COMPLETE_TODO,\n        payload: { todo },\n    })\n}\n\nconst completeAllTodos = (dispatch: any) => () => {\n    dispatch({\n        type: ACTIONS.COMPLETE_ALL_TODOS,\n    })\n}\n\nconst clearCompleted = (dispatch: any) => () => {\n    dispatch({\n        type: ACTIONS.CLEAR_COMPLETED,\n    })\n}\n\nconst actions = {\n    addTodo,\n    editTodo,\n    deleteTodo,\n    completeTodo,\n    completeAllTodos,\n    clearCompleted,\n};\n\nexport default actions;\nexport {\n    ACTIONS,\n};\n","import { ACTIONS } from './todosActions';\n\nimport { Todo } from '../../../typings';\n\nexport type TodosState = {\n  todos: Todo[];\n}\n\nconst initialState: TodosState = {\n  todos: [],\n};\n\nfunction reducer(state: TodosState, { type, payload = {} }: any): TodosState {\n  const { todos } = state;\n  const { todo, text } = payload;\n\n  switch (type) {\n    case ACTIONS.ADD_TODO:\n      return { todos: todos.concat([todo]) };\n\n    case ACTIONS.EDIT_TODO:\n      return { todos: todos.map(current => current.id === todo.id ? { ...todo, text } : current ) };\n\n    case ACTIONS.DELETE_TODO:\n      return { todos: todos.filter(current => current.id !== todo.id) };\n    \n    case ACTIONS.COMPLETE_TODO:\n      return { todos: todos.map(current => current.id === todo.id ? { ...todo, completed: !todo.completed } : current ) };\n\n    case ACTIONS.COMPLETE_ALL_TODOS:\n      const allMarked = todos.every(todo => todo.completed);\n\n      return {\n          todos: todos.map(todo => ({\n              ...todo,\n              completed: !allMarked,\n          }))\n      };\n\n    case ACTIONS.CLEAR_COMPLETED:\n      return { todos: todos.filter(todo => !todo.completed) };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\nexport {\n  initialState,\n};\n","import todosReducer, { initialState } from './todosReducer';\nimport todosActions from './todosActions';\n\nimport createContextProvider, { connectContextFactory, useConnectedContextFactory } from 'react-connect-context-hooks';\n\nconst [TodosProvider, TodosContext] = createContextProvider(todosReducer, initialState, todosActions);\n\nconst withTodos = connectContextFactory(TodosContext);\nconst useTodos = useConnectedContextFactory(TodosContext);\n\nexport default TodosProvider;\nexport {\n    withTodos,\n    useTodos,\n    TodosContext,\n};\n","import React from 'react';\n\nimport TodoTextInput from '../../todos/components/TodoTextInput';\nimport { withTodos } from '../../todos/provider';\n\nimport { addTodo } from '../../../typings';\n\ntype HeaderProps = {\n  addTodo: addTodo;\n}\n\nconst Header: React.FC<HeaderProps> = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text: string) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nexport default withTodos(Header, {\n  actionMappers: ['addTodo'],\n});\n\nexport {\n  Header,\n};\n","const ACTIONS = {\n    SET_VISIBILITY_FILTER: 'SET_VISIBILITY_FILTER',\n};\n\nconst setVisibilityFilter = (dispatch: any) => (visibilityFilter: string) => {\n    dispatch({\n        type: ACTIONS.SET_VISIBILITY_FILTER,\n        payload: { visibilityFilter },\n    })\n}\n\nconst actions = {\n    setVisibilityFilter,\n};\n\nexport default actions;\nexport {\n    ACTIONS,\n};\n","export const VISIBILITY_FILTERS = {\n    SHOW_ALL: 'show_all',\n    SHOW_COMPLETED: 'show_completed',\n    SHOW_ACTIVE: 'show_active',\n};\n","import { ACTIONS } from './mainActions';\nimport { VISIBILITY_FILTERS } from '../constants';\n\nexport type MainState = {\n  visibilityFilter: string;\n}\n\nconst initialState: MainState = {\n  visibilityFilter: VISIBILITY_FILTERS.SHOW_ALL,\n};\n\nfunction reducer(state: MainState, { type, payload = {} }: any): MainState {\n  const { visibilityFilter } = payload;\n\n  switch (type) {\n    case ACTIONS.SET_VISIBILITY_FILTER:\n      return { ...state, visibilityFilter };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\nexport {\n  initialState,\n};\n","import mainReducer, { initialState } from './mainReducer';\nimport mainActions from './mainActions';\n\nimport createContextProvider, { connectContextFactory, useConnectedContextFactory } from 'react-connect-context-hooks';\n\nconst [MainProvider, MainContext] = createContextProvider(mainReducer, initialState, mainActions);\n\nconst withMain = connectContextFactory(MainContext);\nconst useMain = useConnectedContextFactory(MainContext);\n\nexport default MainProvider;\nexport {\n    withMain,\n    useMain,\n    MainContext,\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { withMain } from '../provider';\nimport { MainState } from '../provider/mainReducer';\n\ntype LinkProps = {\n  active: boolean;\n  children: React.ReactNode;\n  setVisibilityFilter: () => void;\n  filter: string;\n}\n\nconst Link: React.FC<LinkProps> = ({ active, children, setVisibilityFilter }) => (\n  <a\n    className={classnames({ selected: active })}\n    style={{ cursor: 'pointer' }}\n    onClick={() => setVisibilityFilter()}\n  >\n    {children}\n  </a>\n)\n\nexport default withMain(Link, {\n  stateMappers: {\n    active: ({ visibilityFilter }: MainState, props: any) => props.filter === visibilityFilter,\n  },\n  actionMappers: {\n    setVisibilityFilter: ({ setVisibilityFilter }: any, props: any) => () => setVisibilityFilter(props.filter),\n  },\n});\n\nexport {\n  Link,\n};\n","import React from 'react';\n\nimport FilterLink from './FilterLink';\nimport { VISIBILITY_FILTERS } from '../constants';\n\nconst FILTER_TITLES: {[key: string]: string} = {\n  [VISIBILITY_FILTERS.SHOW_ALL]: 'All',\n  [VISIBILITY_FILTERS.SHOW_ACTIVE]: 'Active',\n  [VISIBILITY_FILTERS.SHOW_COMPLETED]: 'Completed'\n}\n\ntype FooterProps = {\n  completedCount: number;\n  activeCount: number;\n  onClearCompleted: () => void;\n}\n\nconst Footer: React.FC<FooterProps> = ({ activeCount, completedCount, onClearCompleted }) => {\n  const itemWord = activeCount === 1 ? 'item' : 'items';\n  \n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nexport default Footer;\n\nexport {\n  Footer,\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\n\nimport { Todo } from '../../../typings';\n\ntype TodoItemProps = {\n  todo: Todo;\n  editTodo: (todo: Todo, text: string) => void;\n  deleteTodo: (todo: Todo) => void;\n  completeTodo: (todo: Todo) => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo, editTodo, deleteTodo, completeTodo }) => {\n  const [editing, setEditing] = React.useState(false);\n\n  const handleSave = (text: string) => {\n    if (text.length === 0) {\n      deleteTodo(todo);\n    } else {\n      editTodo(todo, text);\n    }\n    setEditing(false);\n  }\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  }\n\n  return (\n    <li className={classnames({\n      completed: todo.completed,\n      editing: editing\n    })}>\n      {editing ? (\n        <TodoTextInput\n          text={todo.text}\n          editing={editing}\n          onSave={(text: string) => handleSave(text)}\n        />\n      ) : (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo)}\n          />\n          <label onDoubleClick={handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo)} />\n        </div>\n      )}\n    </li>\n  )\n}\n\nexport default TodoItem;\nexport {\n  TodoItem,\n};\n","import React from 'react';\nimport { mergedConnectContextFactory } from 'react-connect-context-hooks';\n\nimport TodoItem from './TodoItem';\nimport { TodosContext } from '../provider';\nimport { MainContext } from '../../main/provider';\nimport { VISIBILITY_FILTERS } from '../../main/constants';\n\nimport { Todo } from '../../../typings';\n\ntype TodoListProps = {\n  todos: Todo[];\n  editTodo: (todo: Todo) => void;\n  deleteTodo: (todo: Todo) => void;\n  completeTodo: (todo: Todo) => void;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, editTodo, deleteTodo, completeTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo =>\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        editTodo={editTodo}\n        deleteTodo={deleteTodo}\n        completeTodo={completeTodo}\n      />\n    )}\n  </ul>\n);\n\nconst withMainAndTodos = mergedConnectContextFactory([MainContext, TodosContext]);\n\nexport default withMainAndTodos(TodoList, {\n  stateMappers: ['todos', 'visibilityFilter'],\n  actionMappers: ['editTodo', 'deleteTodo', 'completeTodo'],\n  afterMerge(mergedProps: any) {\n    const { todos, visibilityFilter } = mergedProps;\n\n    if (visibilityFilter === VISIBILITY_FILTERS.SHOW_ALL) {\n      return { todos };\n    }\n    if (visibilityFilter === VISIBILITY_FILTERS.SHOW_ACTIVE) {\n      return { todos: todos.filter((todo: Todo) => !todo.completed) };\n    }\n    return { todos: todos.filter((todo: Todo) => todo.completed) };\n  }\n});\n\nexport {\n  TodoList,\n}\n","import React from 'react';\n\nimport Footer from './Footer';\n\nimport { withTodos } from '../../todos/provider';\nimport { TodosState } from '../../todos/provider/todosReducer';\nimport TodoList from '../../todos/components/TodoList';\n\ntype MainSectionProps = {\n  todosCount: number;\n  completedCount: number;\n  completeAllTodos: () => void;\n  clearCompleted: () => void;\n}\n\nconst MainSection: React.FC<MainSectionProps> = ({ todosCount, completedCount, completeAllTodos, clearCompleted }) => (\n  <section className=\"main\">\n    {\n      !!todosCount && \n      <span>\n        <input\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          checked={completedCount === todosCount}\n          readOnly\n        />\n        <label onClick={completeAllTodos}/>\n      </span>\n    }\n    <TodoList />\n    {\n      !!todosCount &&\n      <Footer\n        completedCount={completedCount}\n        activeCount={todosCount - completedCount}\n        onClearCompleted={clearCompleted}\n      />\n    }\n  </section>\n)\n\nexport default withTodos(MainSection, {\n  stateMappers: {\n    todosCount: ({ todos }: TodosState) => todos.length,\n    completedCount: ({ todos }: TodosState) => todos.filter(todo => todo.completed).length,\n  },\n  actionMappers: ['completeAllTodos', 'clearCompleted'],\n});\n\nexport {\n  MainSection,\n};\n","import React from 'react';\n\nimport Header from './Header';\nimport MainSection from './MainSection';\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './main/components/App';\n\nimport MainProvider from './main/provider';\nimport TodosProvider from './todos/provider';\n\nimport 'todomvc-app-css/index.css';\n\nrender(\n  <MainProvider>\n    <TodosProvider>\n      <App />\n    </TodosProvider>\n  </MainProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}